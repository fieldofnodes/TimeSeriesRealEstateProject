require(graphics)
library(xts)
require(zoo)
library(grDevices)
require(grDevices)
#For time series
library(ggfortify)
library(magrittr) # for piping %>%
library(changepoint)
library(strucchange)
library(ggpmisc)
#Sorting colours
library(RColorBrewer)
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
DistincColours = function(x){
sample(col_vector, x)
}
require(plyr)
require(scales)
# ---------------------------------------------------------------------------------------------
# Formatting functions for ggplot  graph axis
# ---------------------------------------------------------------------------------------------
#' Human Numbers: Format numbers so they're legible for humans
#' Use this in ggplot for labels where you might use the comma or percent functions from the
#' Scales package.
#'
#' Checks whether numbers are positive or negative.
#' Allows up to 1 significant figure
#' sapply used for element-wise application of the humanity function as a vector may include
#' numbers where billions, millions or thousands are appropriate.
#'
#' @return a character vector the same length as the input vector
#' @param x a numeric vector to format,
#' @smbl a symbol you'd like to prefix your numbers by e.g. "$"
#' @signif = the number of significant places you want the function to return
#' @examples
#' human_numbers(c(1000000 , 1500000, 10000000000))
#' human_numbers(c(1.200000e+05, -2.154660e+05, 2.387790e+05, 4.343500e+04 ,5.648675e+12), "$")
#' ggplot2 + scale_y_continuous(labels = human_numbers)
#' ggplot2 + scale_x_continuous(labels = human_numbers)
#' ggplot2 + scale_x_continuous(labels = human_gbp)
human_numbers <- function(x = NULL, smbl ="", signif = 1){
humanity <- function(y){
if (!is.na(y)){
tn <- round(abs(y) / 1e12, signif)
b <- round(abs(y) / 1e9, signif)
m <- round(abs(y) / 1e6, signif)
k <- round(abs(y) / 1e3, signif)
if ( y >= 0 ){
y_is_positive <- ""
} else {
y_is_positive <- "-"
}
if ( k < 1 ) {
paste0( y_is_positive, smbl, round(abs(y), signif ))
} else if ( m < 1){
paste0 (y_is_positive, smbl,  k , "k")
} else if (b < 1){
paste0 (y_is_positive, smbl, m ,"m")
}else if(tn < 1){
paste0 (y_is_positive, smbl, b ,"bn")
} else {
paste0 (y_is_positive, smbl,  comma(tn), "tn")
}
} else if (is.na(y) | is.null(y)){
"-"
}
}
sapply(x,humanity)
}
#' Human versions of large currency numbers - extensible via smbl
human_gbp   <- function(x){human_numbers(x, smbl = "£")}
human_usd   <- function(x){human_numbers(x, smbl = "$")}
human_euro  <- function(x){human_numbers(x, smbl = "€")}
human_num   <- function(x){human_numbers(x, smbl = "")}
UKTimeSeriesPlot + geom_area(aes(color = variable, fill = variable),
alpha = 0.5, position = position_dodge(0.8)) +
scale_color_manual(values = colorToUse) +
scale_fill_manual(values = colorToUse) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices") +
scale_x_continuous(labels = human_gbp)
UKTimeSeriesPlot = ggplot(data = df, aes(x = Date, y = value, group = variable))
UKTimeSeriesPlot + geom_area(aes(color = variable, fill = variable),
alpha = 0.5, position = position_dodge(0.8)) +
scale_color_manual(values = colorToUse) +
scale_fill_manual(values = colorToUse) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices") +
scale_x_continuous(labels = human_gbp)
NotFancy <- function(l) {
l <- format(l, scientific = FALSE)
parse(text=l)
}
UKTimeSeriesPlot + geom_area(aes(color = variable, fill = variable),
alpha = 0.5, position = position_dodge(0.8)) +
scale_color_manual(values = colorToUse) +
scale_fill_manual(values = colorToUse) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices") +
scale_x_continuous(labels = NotFancy)
LocationTable$Date <- as.Date(LocationTable$Date,
format = "%d/%m/%Y", origin = "01/01/1995")
colorToUse = DistincColours(12)
df <- LocationTable %>%
select(Date, regions) %>%
gather(key = "variable", value = "value", -Date)
head(df, 3)
UKTimeSeriesPlot = ggplot(data = df, aes(x = Date, y = value, group = variable))
UKTimeSeriesPlot + geom_area(aes(color = variable, fill = variable),
alpha = 0.5, position = position_dodge(0.8)) +
scale_color_manual(values = colorToUse) +
scale_fill_manual(values = colorToUse) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices") +
scale_x_continuous(labels = NotFancy)
LocationTable$Date <- as.Date(LocationTable$Date,
format = "%d/%m/%Y", origin = "1995-01-01")
df <- LocationTable %>%
select(Date, regions) %>%
gather(key = "variable", value = "value", -Date)
head(df, 3)
UKTimeSeriesPlot = ggplot(data = df, aes(x = Date, y = value, group = variable))
UKTimeSeriesPlot + geom_area(aes(color = variable, fill = variable),
alpha = 0.5, position = position_dodge(0.8)) +
scale_color_manual(values = colorToUse) +
scale_fill_manual(values = colorToUse) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices") +
scale_x_continuous(labels = NotFancy)
as.numeric(as.Date(15103, origin="1970-01-01"))
UKTimeSeriesPlot + geom_area(aes(color = variable, fill = variable),
alpha = 0.5, position = position_dodge(0.8)) +
scale_color_manual(values = colorToUse) +
scale_fill_manual(values = colorToUse) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices")
png(filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/UKTimeSeriesPlot.png")
#Standard plot for timeseries
UKTimeSeriesPlot = ggplot(data = df, aes(x = Date, y = value, group = variable))
UKTimeSeriesPlot + geom_area(aes(color = variable, fill = variable),
alpha = 0.5, position = position_dodge(0.8)) +
scale_color_manual(values = colorToUse) +
scale_fill_manual(values = colorToUse) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices")
dev.off()
options(stringsAsFactors = FALSE)
par(bg=NA)
# plot the data using ggplot
LocationTable$Date <- as.Date(LocationTable$Date,
format = "%d/%m/%Y", origin = "1995-01-01")
colorToUse = DistincColours(12)
#Just checking the date has been set correctly
class(LocationTable$Date)
head(LocationTable$Date)
df <- LocationTable %>%
select(Date, regions) %>%
gather(key = "variable", value = "value", -Date)
head(df, 3)
#Setting up a png output for this plot
png(filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/UKTimeSeriesPlot.png")
#Standard plot for timeseries
UKTimeSeriesPlot = ggplot(data = df, aes(x = Date, y = value, group = variable))
UKTimeSeriesPlot + geom_area(aes(color = variable, fill = variable),
alpha = 0.5, position = position_dodge(0.8)) +
scale_color_manual(values = colorToUse) +
scale_fill_manual(values = colorToUse) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices")
dev.off()
#Setting up a png output for this plot
png(filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/UKTimeSeriesPlot.png")
#Standard plot for timeseries
UKTimeSeriesPlot = ggplot(data = df, aes(x = Date, y = value, group = variable))
UKTimeSeriesPlot + geom_area(aes(color = variable, fill = variable),
alpha = 0.5, position = position_dodge(0.8)) +
scale_color_manual(values = colorToUse) +
scale_fill_manual(values = colorToUse) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices") +
theme(
rect = element_rect(fill = "transparent") # all rectangles
)
dev.off()
library(ggplot2)
options(stringsAsFactors = FALSE)
# plot the data using ggplot
LocationTable$Date <- as.Date(LocationTable$Date,
format = "%d/%m/%Y", origin = "1995-01-01")
colorToUse = DistincColours(12)
#Just checking the date has been set correctly
class(LocationTable$Date)
head(LocationTable$Date)
df <- LocationTable %>%
select(Date, regions) %>%
gather(key = "variable", value = "value", -Date)
head(df, 3)
#Setting up a png output for this plot
png(filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/UKTimeSeriesPlot.png")
#Standard plot for timeseries
UKTimeSeriesPlot = ggplot(data = df, aes(x = Date, y = value, group = variable))
UKTimeSeriesPlot + geom_area(aes(color = variable, fill = variable),
alpha = 0.5, position = position_dodge(0.8)) +
scale_color_manual(values = colorToUse) +
scale_fill_manual(values = colorToUse) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices") +
theme(
rect = element_rect(fill = "transparent") # all rectangles
)
dev.off()
UKTimeSeriesPlot = ggplot(data = df, aes(x = Date, y = value, group = variable))
UKTimeSeriesPlot + geom_area(aes(color = variable, fill = variable),
alpha = 0.5, position = position_dodge(0.8)) +
scale_color_manual(values = colorToUse) +
scale_fill_manual(values = colorToUse) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices") +
theme(
rect = element_rect(fill = "transparent") # all rectangles
)
ggsave(UKTimeSeriesPlot, filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/UKTimeSeriesPlot.png",  bg = "transparent")
UKTimeSeriesPlot = ggplot(data = df, aes(x = Date, y = value, group = variable))
UKTimeSeriesPlot + geom_area(aes(color = variable, fill = variable),
alpha = 0.5, position = position_dodge(0.8)) +
scale_color_manual(values = colorToUse) +
scale_fill_manual(values = colorToUse) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices")
ggsave(UKTimeSeriesPlot, filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/UKTimeSeriesPlot.png",  bg = "transparent")
p <- UKTimeSeriesPlot + geom_area(aes(color = variable, fill = variable),
alpha = 0.5, position = position_dodge(0.8)) +
scale_color_manual(values = colorToUse) +
scale_fill_manual(values = colorToUse) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices")
ggsave(p, filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/UKTimeSeriesPlot.png", bg = "transparent")
UKTimeSeriesPlot + geom_line(aes(color = variable, linetype = variable), size = 0.7) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices") + kobe_theme2()
ggsave(p1, filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/DifferentLineTypesSeriesUK.png", bg = "transparent")
p1 <- UKTimeSeriesPlot + geom_line(aes(color = variable, linetype = variable), size = 0.7) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices") + kobe_theme2()
ggsave(p1, filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/DifferentLineTypesSeriesUK.png", bg = "transparent")
p1 <- UKTimeSeriesPlot + geom_line(aes(color = variable, linetype = variable), size = 0.7) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices")
ggsave(p1, filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/DifferentLineTypesSeriesUK.png", bg = "transparent")
UKTimeSeriesPlot = ggplot(data = df, aes(x = Date, y = value, group = variable))
p <- UKTimeSeriesPlot + geom_area(aes(color = variable, fill = variable, linetype = variable),
alpha = 0.5, position = position_dodge(0.8)) +
scale_color_manual(values = colorToUse) +
scale_fill_manual(values = colorToUse) +
labs(title = "Average prices seasonally adjsuted",
subtitle = "1995 - 2017",
x = "Date", y = "Average house prices")
p
ggsave(p, filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/UKTimeSeriesPlot.png", bg = "transparent")
#PLots of the trends all in one plot.
#colorToUse = DistincColours(12)
ts.plot(DecompDataEnglandMonthly$trend,DecompDataWalesMonthly$trend,	DecompDataLondonMonthly$trend,	DecompDataNorthEastMonthly$trend,	DecompDataWestMidlandsRegionMonthly$trend,	DecompDataEastMidlandsMonthly$trend,	DecompDataSouthEastMonthly$trend,	DecompDataSouthWestMonthly$trend,	DecompDataEastofEnglandMonthly$trend,	DecompDataNorthWestMonthly$trend,	DecompDataYorkshireandtheHumberMonthly$trend,	DecompDataEnglandandWalesMonthly$trend,
main="Average house prices trend in various regions of the UK",
col=colorToUse, ylab="")
#legend("topleft",legend=regions, col=colorToUse, lty=1, ncol=1, cex = 0.8)
Tregion = c(DecompDataEnglandMonthly$trend,DecompDataWalesMonthly$trend,	DecompDataLondonMonthly$trend,	DecompDataNorthEastMonthly$trend,	DecompDataWestMidlandsRegionMonthly$trend,	DecompDataEastMidlandsMonthly$trend,	DecompDataSouthEastMonthly$trend,	DecompDataSouthWestMonthly$trend,	DecompDataEastofEnglandMonthly$trend,	DecompDataNorthWestMonthly$trend,	DecompDataYorkshireandtheHumberMonthly$trend,	DecompDataEnglandandWalesMonthly$trend)
#Trend regions
Tregion = c(DecompDataEnglandMonthly$trend,DecompDataWalesMonthly$trend,	DecompDataLondonMonthly$trend,	DecompDataNorthEastMonthly$trend,	DecompDataWestMidlandsRegionMonthly$trend,	DecompDataEastMidlandsMonthly$trend,	DecompDataSouthEastMonthly$trend,	DecompDataSouthWestMonthly$trend,	DecompDataEastofEnglandMonthly$trend,	DecompDataNorthWestMonthly$trend,	DecompDataYorkshireandtheHumberMonthly$trend,	DecompDataEnglandandWalesMonthly$trend)
#Create dataframe of regions
MonthlyFrequencyTrend = cbind.data.frame(LocationTable$Date,Tregion)
regions <- c("England", "Wales", "London", "North East", "West Midlands Region", "East Midlands", "South East", "South West", "East of England", "North West", "Yorkshire and the Humber", "England and Wales")
colnames(MonthlyFrequencyTrend) = c("Date", Tregion)
DecompDataEnglandMonthly$trend
Tregion = c(DecompDataEnglandMonthly$trend,DecompDataWalesMonthly$trend,	DecompDataLondonMonthly$trend,	DecompDataNorthEastMonthly$trend,	DecompDataWestMidlandsRegionMonthly$trend,	DecompDataEastMidlandsMonthly$trend,	DecompDataSouthEastMonthly$trend,	DecompDataSouthWestMonthly$trend,	DecompDataEastofEnglandMonthly$trend,	DecompDataNorthWestMonthly$trend,	DecompDataYorkshireandtheHumberMonthly$trend,	DecompDataEnglandandWalesMonthly$trend)
#Create dataframe of regions
MonthlyFrequencyTrend = cbind.data.frame(LocationTable$Date,Tregion)
regions <- c("England", "Wales", "London", "North East", "West Midlands Region", "East Midlands", "South East", "South West", "East of England", "North West", "Yorkshire and the Humber", "England and Wales")
MonthlyFrequencyTrend
Tregion
Tregion = c(LocationTable$Date,DecompDataEnglandMonthly$trend,DecompDataWalesMonthly$trend,	DecompDataLondonMonthly$trend,	DecompDataNorthEastMonthly$trend,	DecompDataWestMidlandsRegionMonthly$trend,	DecompDataEastMidlandsMonthly$trend,	DecompDataSouthEastMonthly$trend,	DecompDataSouthWestMonthly$trend,	DecompDataEastofEnglandMonthly$trend,	DecompDataNorthWestMonthly$trend,	DecompDataYorkshireandtheHumberMonthly$trend,	DecompDataEnglandandWalesMonthly$trend)
Tregion
Tregion = as.data.frame(c(LocationTable$Date,DecompDataEnglandMonthly$trend,DecompDataWalesMonthly$trend,	DecompDataLondonMonthly$trend,	DecompDataNorthEastMonthly$trend,	DecompDataWestMidlandsRegionMonthly$trend,	DecompDataEastMidlandsMonthly$trend,	DecompDataSouthEastMonthly$trend,	DecompDataSouthWestMonthly$trend,	DecompDataEastofEnglandMonthly$trend,	DecompDataNorthWestMonthly$trend,	DecompDataYorkshireandtheHumberMonthly$trend,	DecompDataEnglandandWalesMonthly$trend))
Tregion
DecompDataEnglandandWalesMonthly
DecompDataEnglandMonthly$Trend
DecompDataEnglandMonthly$trend
DecompDataEnglandandWalesMonthly[1]
DecompDataEnglandandWalesMonthly[0]
DecompDataEnglandandWalesMonthly[2]
DecompDataEnglandandWalesMonthly[c(1,3)]
DecompDataEnglandandWalesMonthly[2]
DecompDataEnglandandWalesMonthly[2]==DecompDataEnglandandWalesMonthly$trend
DecompDataEnglandandWalesMonthly$trend
TrendData =
head(DecompDataEnglandMonthly$trend)
head(DecompDataEnglandMonthly$trend)
TrendData =
head(DecompDataEnglandMonthly$trend,12)
TrendData =
head(DecompDataEnglandMonthly$trend,12)
head(DecompDataEnglandMonthly$trend,12)
head(rbind(DecompDataEnglandMonthly$trend, DecompDataWalesMonthly$trend),12)
head(rbind(DecompDataEnglandMonthly$trend, DecompDataWalesMonthly$trend))
head(cbind(DecompDataEnglandMonthly$trend, DecompDataWalesMonthly$trend))
head(cbind(DecompDataEnglandMonthly$trend, DecompDataWalesMonthly$trend,DecompDataEnglandMonthly$trend, DecompDataWalesMonthly$trend, DecompDataLondonMonthly$trend,	DecompDataNorthEastMonthly$trend,	DecompDataWestMidlandsRegionMonthly$trend, DecompDataEastMidlandsMonthly$trend,	DecompDataSouthEastMonthly$trend,	DecompDataSouthWestMonthly$trend, DecompDataEastofEnglandMonthly$trend,	DecompDataNorthWestMonthly$trend,	DecompDataYorkshireandtheHumberMonthly$trend,	DecompDataEnglandandWalesMonthly$trend))
colnames(data) = regions
data[0]
data[1]
dataCopy <- data
as.matrix.data.frame(dataCopy)
colnames(data) = regions
as.matrix.data.frame(dataCopy)
class(data)
class(DecompDataEnglandMonthly$trend)
#PLots of the series themselves all in one plot.
colorToUse = DistincColours(12)
ts.plot(DecompDataEnglandMonthly$x,DecompDataWalesMonthly$x,	DecompDataLondonMonthly$x,	DecompDataNorthEastMonthly$x,	DecompDataWestMidlandsRegionMonthly$x,	DecompDataEastMidlandsMonthly$x,	DecompDataSouthEastMonthly$x,	DecompDataSouthWestMonthly$x,	DecompDataEastofEnglandMonthly$x,	DecompDataNorthWestMonthly$x,	DecompDataYorkshireandtheHumberMonthly$x,	DecompDataEnglandandWalesMonthly$x,
main="Average house prices in various regions of the UK",
col=colorToUse, ylab="")
#legend("topleft",legend=regions, col=colorToUse, lty=1, ncol=1, cex = 0.8)
#PLots of the series themselves all in one plot.
colorToUse = DistincColours(12)
ts.plot(DecompDataEnglandMonthly$x,DecompDataWalesMonthly$x,	DecompDataLondonMonthly$x,	DecompDataNorthEastMonthly$x,	DecompDataWestMidlandsRegionMonthly$x,	DecompDataEastMidlandsMonthly$x,	DecompDataSouthEastMonthly$x,	DecompDataSouthWestMonthly$x,	DecompDataEastofEnglandMonthly$x,	DecompDataNorthWestMonthly$x,	DecompDataYorkshireandtheHumberMonthly$x,	DecompDataEnglandandWalesMonthly$x,
main="Average house prices in various regions of the UK",
col=colorToUse, ylab="". lty = 1:12)
ts.plot(DecompDataEnglandMonthly$x,DecompDataWalesMonthly$x,	DecompDataLondonMonthly$x,	DecompDataNorthEastMonthly$x,	DecompDataWestMidlandsRegionMonthly$x,	DecompDataEastMidlandsMonthly$x,	DecompDataSouthEastMonthly$x,	DecompDataSouthWestMonthly$x,	DecompDataEastofEnglandMonthly$x,	DecompDataNorthWestMonthly$x,	DecompDataYorkshireandtheHumberMonthly$x,	DecompDataEnglandandWalesMonthly$x,
main="Average house prices in various regions of the UK",
col=colorToUse, ylab="", lty = 1:12)
ts.plot(DecompDataEnglandMonthly$cycle,DecompDataWalesMonthly$cycle,	DecompDataLondonMonthly$cycle,	DecompDataNorthEastMonthly$cycle,	DecompDataWestMidlandsRegionMonthly$cycle,	DecompDataEastMidlandsMonthly$cycle,	DecompDataSouthEastMonthly$cycle,	DecompDataSouthWestMonthly$cycle,	DecompDataEastofEnglandMonthly$cycle,	DecompDataNorthWestMonthly$cycle,	DecompDataYorkshireandtheHumberMonthly$cycle,	DecompDataEnglandandWalesMonthly$cycle,
main="Average house prices cycle in various regions of the UK",
col=colorToUse, ylab="", lty =1:12)
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("center",legend=regions, col=colorToUse, lty=1:12, ncol=2, cex = .80)
mtext("Regions of the UK",side = 3,line = 0,outer = FALSE, at = NA)
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("center",legend=regions, col=colorToUse, lty=1:12, ncol=2, cex = .80)
mtext("Regions of the UK",side = 2,line = 0,outer = FALSE, at = NA)
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("center",legend=regions, col=colorToUse, lty=1:12, ncol=2, cex = .80)
mtext("Regions of the UK",side = 3,line = -1,outer = FALSE, at = NA)
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("center",legend=regions, col=colorToUse, lty=1:12, ncol=2, cex = .80)
mtext("Regions of the UK",side = 3,line = -3,outer = FALSE, at = NA)
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("center",legend=regions, col=colorToUse, lty=1:12, ncol=2, cex = .80)
mtext("Regions of the UK",side = 3,line = -6,outer = FALSE, at = NA)
#Trend and Cycle decompositions
Lambda = 129600
DecompDataEnglandMonthly=hpfilter(LocationTableTS$England,freq=Lambda,type=c("lambda","frequency"),drift=TRUE)
DecompDataWalesMonthly=hpfilter(LocationTableTS$Wales,freq=Lambda,type=c("lambda","frequency"),drift=TRUE)
DecompDataLondonMonthly=hpfilter(LocationTableTS$London,freq=Lambda,type=c("lambda","frequency"),drift=TRUE)
DecompDataNorthEastMonthly=hpfilter(LocationTableTS$`North East`,freq=Lambda,type=c("lambda","frequency"),drift=TRUE)
DecompDataWestMidlandsRegionMonthly=hpfilter(LocationTableTS$`West Midlands Region`,freq=Lambda,type=c("lambda","frequency"),drift=TRUE)
DecompDataEastMidlandsMonthly=hpfilter(LocationTableTS$`East Midlands`,freq=Lambda,type=c("lambda","frequency"),drift=TRUE)
DecompDataSouthEastMonthly=hpfilter(LocationTableTS$`South East`,freq=Lambda,type=c("lambda","frequency"),drift=TRUE)
DecompDataSouthWestMonthly=hpfilter(LocationTableTS$`South West`,freq=Lambda,type=c("lambda","frequency"),drift=TRUE)
DecompDataEastofEnglandMonthly=hpfilter(LocationTableTS$`East of England`,freq=Lambda,type=c("lambda","frequency"),drift=TRUE)
DecompDataNorthWestMonthly=hpfilter(LocationTableTS$`North West`,freq=Lambda,type=c("lambda","frequency"),drift=TRUE)
DecompDataYorkshireandtheHumberMonthly=hpfilter(LocationTableTS$`Yorkshire and the Humber`,freq=Lambda,type=c("lambda","frequency"),drift=TRUE)
DecompDataEnglandandWalesMonthly=hpfilter(LocationTableTS$`England and Wales`,freq=Lambda,type=c("lambda","frequency"),drift=TRUE)
#PLots of the series themselves all in one plot.
colorToUse = DistincColours(12)
ts.plot(DecompDataEnglandMonthly$x,DecompDataWalesMonthly$x,	DecompDataLondonMonthly$x,	DecompDataNorthEastMonthly$x,	DecompDataWestMidlandsRegionMonthly$x,	DecompDataEastMidlandsMonthly$x,	DecompDataSouthEastMonthly$x,	DecompDataSouthWestMonthly$x,	DecompDataEastofEnglandMonthly$x,	DecompDataNorthWestMonthly$x,	DecompDataYorkshireandtheHumberMonthly$x,	DecompDataEnglandandWalesMonthly$x,
main="Average house prices in various regions of the UK",
col=colorToUse, ylab="", lty = 1:12)
#legend("topleft",legend=regions, col=colorToUse, lty=1, ncol=1, cex = 0.8)
#PLots of the trends all in one plot.
#colorToUse = DistincColours(12)
ts.plot(DecompDataEnglandMonthly$trend,DecompDataWalesMonthly$trend,	DecompDataLondonMonthly$trend,	DecompDataNorthEastMonthly$trend,	DecompDataWestMidlandsRegionMonthly$trend,	DecompDataEastMidlandsMonthly$trend,	DecompDataSouthEastMonthly$trend,	DecompDataSouthWestMonthly$trend,	DecompDataEastofEnglandMonthly$trend,	DecompDataNorthWestMonthly$trend,	DecompDataYorkshireandtheHumberMonthly$trend,	DecompDataEnglandandWalesMonthly$trend,
main="Average house prices trend in various regions of the UK",
col=colorToUse, ylab="", lty =1:12)
#legend("topleft",legend=regions, col=colorToUse, lty=1, ncol=1, cex = 0.8)
#PLots of the cycles all in one plot.
#colorToUse = DistincColours(12)
ts.plot(DecompDataEnglandMonthly$cycle,DecompDataWalesMonthly$cycle,	DecompDataLondonMonthly$cycle,	DecompDataNorthEastMonthly$cycle,	DecompDataWestMidlandsRegionMonthly$cycle,	DecompDataEastMidlandsMonthly$cycle,	DecompDataSouthEastMonthly$cycle,	DecompDataSouthWestMonthly$cycle,	DecompDataEastofEnglandMonthly$cycle,	DecompDataNorthWestMonthly$cycle,	DecompDataYorkshireandtheHumberMonthly$cycle,	DecompDataEnglandandWalesMonthly$cycle,
main="Average house prices cycle in various regions of the UK",
col=colorToUse, ylab="", lty =1:12)
#legend("topleft",legend=regions, col=colorToUse, lty=1, ncol=1, cex = 0.8)
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("center",legend=regions, col=colorToUse, lty=1:12, ncol=2, cex = .80)
mtext("Regions of the UK",side = 3,line = -6,outer = FALSE, at = NA)
#Exporting as png example
# Cities: London
#png(filename = "/home/jon/Documents/Minvera Statistical Consulting/Plots/STL Plots/LondonPercentChangeSTLDecompositionPlot.png")
#AveragePriceSeasonallyAdjustedTSSTLDecomposition = (stl(AveragePriceSeasonallyAdjustedTSComponents, s.window = 7, t.window = 50, t.jump = 1))
#AveragePriceSeasonallyAdjustedTSSTLDecompositionPlot = plot(AveragePriceSeasonallyAdjustedTSSTLDecomposition)
#adev.off()
#PLots of the series themselves all in one plot.
colorToUse = DistincColours(12)
ts.plot(DecompDataEnglandMonthly$x,DecompDataWalesMonthly$x,	DecompDataLondonMonthly$x,	DecompDataNorthEastMonthly$x,	DecompDataWestMidlandsRegionMonthly$x,	DecompDataEastMidlandsMonthly$x,	DecompDataSouthEastMonthly$x,	DecompDataSouthWestMonthly$x,	DecompDataEastofEnglandMonthly$x,	DecompDataNorthWestMonthly$x,	DecompDataYorkshireandtheHumberMonthly$x,	DecompDataEnglandandWalesMonthly$x,
main="Average house prices in various regions of the UK",
col=colorToUse, ylab="", lty = 1:12)
#legend("topleft",legend=regions, col=colorToUse, lty=1, ncol=1, cex = 0.8)
#PLots of the trends all in one plot.
#colorToUse = DistincColours(12)
ts.plot(DecompDataEnglandMonthly$trend,DecompDataWalesMonthly$trend,	DecompDataLondonMonthly$trend,	DecompDataNorthEastMonthly$trend,	DecompDataWestMidlandsRegionMonthly$trend,	DecompDataEastMidlandsMonthly$trend,	DecompDataSouthEastMonthly$trend,	DecompDataSouthWestMonthly$trend,	DecompDataEastofEnglandMonthly$trend,	DecompDataNorthWestMonthly$trend,	DecompDataYorkshireandtheHumberMonthly$trend,	DecompDataEnglandandWalesMonthly$trend,
main="Average house prices trend in various regions of the UK",
col=colorToUse, ylab="", lty =1:12)
#legend("topleft",legend=regions, col=colorToUse, lty=1, ncol=1, cex = 0.8)
#PLots of the cycles all in one plot.
#colorToUse = DistincColours(12)
ts.plot(DecompDataEnglandMonthly$cycle,DecompDataWalesMonthly$cycle,	DecompDataLondonMonthly$cycle,	DecompDataNorthEastMonthly$cycle,	DecompDataWestMidlandsRegionMonthly$cycle,	DecompDataEastMidlandsMonthly$cycle,	DecompDataSouthEastMonthly$cycle,	DecompDataSouthWestMonthly$cycle,	DecompDataEastofEnglandMonthly$cycle,	DecompDataNorthWestMonthly$cycle,	DecompDataYorkshireandtheHumberMonthly$cycle,	DecompDataEnglandandWalesMonthly$cycle,
main="Average house prices cycle in various regions of the UK",
col=colorToUse, ylab="", lty =1:12)
#legend("topleft",legend=regions, col=colorToUse, lty=1, ncol=1, cex = 0.8)
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("center",legend=regions, col=colorToUse, lty=1:12, ncol=2, cex = .80)
mtext("Regions of the UK",side = 3,line = -6,outer = FALSE, at = NA)
?png
png(filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/HPFilterDataNoTrendNoCycle.png",
width = 1080, height = 1080, units = "px", pointsize = 12,
bg = "transparent",  res = 300)
ts.plot(DecompDataEnglandMonthly$x,DecompDataWalesMonthly$x,	DecompDataLondonMonthly$x,	DecompDataNorthEastMonthly$x,	DecompDataWestMidlandsRegionMonthly$x,	DecompDataEastMidlandsMonthly$x,	DecompDataSouthEastMonthly$x,	DecompDataSouthWestMonthly$x,	DecompDataEastofEnglandMonthly$x,	DecompDataNorthWestMonthly$x,	DecompDataYorkshireandtheHumberMonthly$x,	DecompDataEnglandandWalesMonthly$x,
main="Average house prices in various regions of the UK",
col=colorToUse, ylab="", lty = 1:12)
#legend("topleft",legend=regions, col=colorToUse, lty=1, ncol=1, cex = 0.8)
dev.off()
png(filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/HPFilterDataNoTrendNoCycle.png",
width = 800, height = 800, units = "px", pointsize = 12,
bg = "transparent",  res = 300)
ts.plot(DecompDataEnglandMonthly$x,DecompDataWalesMonthly$x,	DecompDataLondonMonthly$x,	DecompDataNorthEastMonthly$x,	DecompDataWestMidlandsRegionMonthly$x,	DecompDataEastMidlandsMonthly$x,	DecompDataSouthEastMonthly$x,	DecompDataSouthWestMonthly$x,	DecompDataEastofEnglandMonthly$x,	DecompDataNorthWestMonthly$x,	DecompDataYorkshireandtheHumberMonthly$x,	DecompDataEnglandandWalesMonthly$x,
main="Average house prices in various regions of the UK",
col=colorToUse, ylab="", lty = 1:12)
#legend("topleft",legend=regions, col=colorToUse, lty=1, ncol=1, cex = 0.8)
dev.off()
png(filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/HPFilterDataNoTrendNoCycle.png",
width = 800, height = 800, units = "px", pointsize = 8,
bg = "white",  res = 300)
ts.plot(DecompDataEnglandMonthly$x,DecompDataWalesMonthly$x,	DecompDataLondonMonthly$x,	DecompDataNorthEastMonthly$x,	DecompDataWestMidlandsRegionMonthly$x,	DecompDataEastMidlandsMonthly$x,	DecompDataSouthEastMonthly$x,	DecompDataSouthWestMonthly$x,	DecompDataEastofEnglandMonthly$x,	DecompDataNorthWestMonthly$x,	DecompDataYorkshireandtheHumberMonthly$x,	DecompDataEnglandandWalesMonthly$x,
main="Average house prices in various regions of the UK",
col=colorToUse, ylab="", lty = 1:12)
#legend("topleft",legend=regions, col=colorToUse, lty=1, ncol=1, cex = 0.8)
dev.off()
ts.plot(DecompDataEnglandMonthly$x,DecompDataWalesMonthly$x,	DecompDataLondonMonthly$x,	DecompDataNorthEastMonthly$x,	DecompDataWestMidlandsRegionMonthly$x,	DecompDataEastMidlandsMonthly$x,	DecompDataSouthEastMonthly$x,	DecompDataSouthWestMonthly$x,	DecompDataEastofEnglandMonthly$x,	DecompDataNorthWestMonthly$x,	DecompDataYorkshireandtheHumberMonthly$x,	DecompDataEnglandandWalesMonthly$x,
main="Average house prices in various regions of the UK",
col=colorToUse, ylab="", lty = 1:12)
png(filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/HPFilterDataNoTrendNoCycle.png",
width = 876, height =556, units = "px", pointsize = 8,
bg = "white",  res = 300)
ts.plot(DecompDataEnglandMonthly$x,DecompDataWalesMonthly$x,	DecompDataLondonMonthly$x,	DecompDataNorthEastMonthly$x,	DecompDataWestMidlandsRegionMonthly$x,	DecompDataEastMidlandsMonthly$x,	DecompDataSouthEastMonthly$x,	DecompDataSouthWestMonthly$x,	DecompDataEastofEnglandMonthly$x,	DecompDataNorthWestMonthly$x,	DecompDataYorkshireandtheHumberMonthly$x,	DecompDataEnglandandWalesMonthly$x,
main="Average house prices in various regions of the UK",
col=colorToUse, ylab="", lty = 1:12)
#legend("topleft",legend=regions, col=colorToUse, lty=1, ncol=1, cex = 0.8)
dev.off()
png(filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/HPFilterDataNoTrendNoCycle.png",
width = 876, height =556, units = "ppi", pointsize = 12,
bg = "white",  res = 300)
ts.plot(DecompDataEnglandMonthly$x,DecompDataWalesMonthly$x,	DecompDataLondonMonthly$x,	DecompDataNorthEastMonthly$x,	DecompDataWestMidlandsRegionMonthly$x,	DecompDataEastMidlandsMonthly$x,	DecompDataSouthEastMonthly$x,	DecompDataSouthWestMonthly$x,	DecompDataEastofEnglandMonthly$x,	DecompDataNorthWestMonthly$x,	DecompDataYorkshireandtheHumberMonthly$x,	DecompDataEnglandandWalesMonthly$x,
main="Average house prices in various regions of the UK",
col=colorToUse, ylab="", lty = 1:12)
#legend("topleft",legend=regions, col=colorToUse, lty=1, ncol=1, cex = 0.8)
dev.off()
png(filename = "/home/jon/Documents/R_Projects/TimeSeriesRealEstateProject/fig/HPFilterDataNoTrendNoCycle.png",
width = 876, height =556, units = "mm", pointsize = 12,
bg = "white",  res = 300)
ts.plot(DecompDataEnglandMonthly$x,DecompDataWalesMonthly$x,	DecompDataLondonMonthly$x,	DecompDataNorthEastMonthly$x,	DecompDataWestMidlandsRegionMonthly$x,	DecompDataEastMidlandsMonthly$x,	DecompDataSouthEastMonthly$x,	DecompDataSouthWestMonthly$x,	DecompDataEastofEnglandMonthly$x,	DecompDataNorthWestMonthly$x,	DecompDataYorkshireandtheHumberMonthly$x,	DecompDataEnglandandWalesMonthly$x,
main="Average house prices in various regions of the UK",
col=colorToUse, ylab="", lty = 1:12)
#legend("topleft",legend=regions, col=colorToUse, lty=1, ncol=1, cex = 0.8)
dev.off()
ts.plot(DecompDataEnglandMonthly$x,DecompDataWalesMonthly$x,	DecompDataLondonMonthly$x,	DecompDataNorthEastMonthly$x,	DecompDataWestMidlandsRegionMonthly$x,	DecompDataEastMidlandsMonthly$x,	DecompDataSouthEastMonthly$x,	DecompDataSouthWestMonthly$x,	DecompDataEastofEnglandMonthly$x,	DecompDataNorthWestMonthly$x,	DecompDataYorkshireandtheHumberMonthly$x,	DecompDataEnglandandWalesMonthly$x,
main="Average house prices in various regions of the UK",
col=colorToUse, ylab="", lty = 1:12)
#legend("topleft",legend=regions, col=colorToUse, lty=1, ncol=1, cex = 0.8)
ts.plot(DecompDataEnglandMonthly$trend,DecompDataWalesMonthly$trend,	DecompDataLondonMonthly$trend,	DecompDataNorthEastMonthly$trend,	DecompDataWestMidlandsRegionMonthly$trend,	DecompDataEastMidlandsMonthly$trend,	DecompDataSouthEastMonthly$trend,	DecompDataSouthWestMonthly$trend,	DecompDataEastofEnglandMonthly$trend,	DecompDataNorthWestMonthly$trend,	DecompDataYorkshireandtheHumberMonthly$trend,	DecompDataEnglandandWalesMonthly$trend,
main="Average house prices trend in various regions of the UK",
col=colorToUse, ylab="", lty =1:12)
ts.plot(DecompDataEnglandMonthly$cycle,DecompDataWalesMonthly$cycle,	DecompDataLondonMonthly$cycle,	DecompDataNorthEastMonthly$cycle,	DecompDataWestMidlandsRegionMonthly$cycle,	DecompDataEastMidlandsMonthly$cycle,	DecompDataSouthEastMonthly$cycle,	DecompDataSouthWestMonthly$cycle,	DecompDataEastofEnglandMonthly$cycle,	DecompDataNorthWestMonthly$cycle,	DecompDataYorkshireandtheHumberMonthly$cycle,	DecompDataEnglandandWalesMonthly$cycle,
main="Average house prices cycle in various regions of the UK",
col=colorToUse, ylab="", lty =1:12)
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("center",legend=regions, col=colorToUse, lty=1:12, ncol=2, cex = .80)
mtext("Regions of the UK",side = 3,line = -6,outer = FALSE, at = NA)
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:.5, ylim=0:.5)
legend("center",legend=regions, col=colorToUse, lty=1:12, ncol=2, cex = .80)
mtext("Regions of the UK",side = 3,line = -6,outer = FALSE, at = NA)
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:2, ylim=0:2)
legend("center",legend=regions, col=colorToUse, lty=1:12, ncol=2, cex = .80)
mtext("Regions of the UK",side = 3,line = -6,outer = FALSE, at = NA)
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("center",legend=regions, col=colorToUse, lty=1:12, ncol=2, cex = .80)
mtext("Regions of the UK",side = 3,line = -6,outer = FALSE, at = NA)
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("center",legend=regions, col=colorToUse, lty=1:12, ncol=2, cex = 1.2)
mtext("Regions of the UK",side = 3,line = -6,outer = FALSE, at = NA)
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("center",legend=regions, col=colorToUse, lty=1:12, ncol=2, cex = 1.2)
mtext("Regions of the UK",side = 3,line = -3,outer = FALSE, at = NA)
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("center",legend=regions, col=colorToUse, lty=1:12, ncol=2, cex = 1.2)
mtext("Regions of the UK",side = 3,line = -4,outer = FALSE, at = NA)
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("center",legend=regions, col=colorToUse, lty=1:12, ncol=2, cex = 1.2)
mtext("Regions of the UK",side = 3,line = -4.5,outer = FALSE, at = NA)
